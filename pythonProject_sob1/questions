1.Задача с кубиком
Бросаем кубик 6-гранныый стратегия, когда останавливаемся, а когда перебрасываем но сразу фиксируем.
Ответ: когда <=3 перебрасываем.

2.Декоратор и Итератор
Декоратор
Декоратор — это функция, которая изменяет или расширяет поведение другой функции без изменения её кода.
def decorator(func):
    def wrapper():
        print("До вызова")
        func()
        print("После вызова")
    return wrapper

@decorator
def hello():
    print("Привет!")

hello()
# Вывод:
# До вызова
# Привет!

Итератор
Итератор — это объект, который реализует методы __iter__() и __next__(), позволяя перебирать элементы по одному.

Пример:

python
Копировать
Редактировать
nums = [1, 2, 3]
it = iter(nums)       # Получаем итератор

print(next(it))  # 1
print(next(it))  # 2
print(next(it))  # 3
Итерируемый объект (итерируемый) — тот, у которого можно вызвать iter(). Итератор — это то, что возвращается этим вызовом.
3.Алгоритмы классификации

4.Отличия Бустинга и Случайного леса

5.Отбор признаков

6.Борьба с переобучением

7.Первая задача

8.Вторая задача

9.Работа с таблицами

10.Оценка рекомендательных систем

11.TF-IDF